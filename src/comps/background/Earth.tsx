/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Earth.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Group } from "three";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Icosphere_Icosphere001: THREE.Mesh;
  };
  materials: {
    ["Material.005"]: THREE.MeshStandardMaterial;
  };
};

export function Earth(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/Earth.glb") as GLTFResult;

  const earth = useRef<Group>(null);

  useFrame(() => {
    if (earth.current) {
      earth.current.rotation.y += 0.0005;
      earth.current.rotation.x += 0.00005;
    }
  });
  return (
    <group {...props} scale={0.25} ref={earth} dispose={null}>
      <mesh
        geometry={nodes.Icosphere_Icosphere001.geometry}
        material={materials["Material.005"]}
      />
    </group>
  );
}

useGLTF.preload("/models/Earth.glb");
